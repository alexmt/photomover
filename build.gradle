buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.moowork.gradle:gradle-grunt-plugin:$gruntPluginVersion"
    classpath "com.moowork.gradle:gradle-node-plugin:$nodePluginVersion"
  }
}

apply plugin: "application"

applicationName = "Plus2Flickr"
mainClassName = "plus2flickr.cli.CliPackage"

apply plugin: "kotlin"
apply plugin: "grunt"
apply plugin: "node"

node {
  version = '0.10.22'
  download = true
}

test {
  useTestNG()
}

task grunt_build(dependsOn: ["npmInstall"])
task stage(dependsOn: ["grunt_build", "installApp"])

repositories {
  mavenCentral()
  maven {
    url "http://jcenter.bintray.com"
  }
}

dependencies {
  // core
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  compile "joda-time:joda-time:$jodaTimeVersion"
  compile "commons-io:commons-io:$commonsIoVersion"
  compile "com.google.guava:guava:$guavaVersion"
  // services
  runtime "javax.mail:mail:1.4"
  compile "org.scribe:scribe:$scribeVersion" //oauth
  compile "com.flickr4java:flickr:$flickrVersion"
  compile "com.google.api-client:google-api-client:$googleApiClientVersion"
  compile "com.google.api-client:google-api-client:$googleApiClientVersion"
  compile "com.google.apis:google-api-services-oauth2:v2-rev60-1.17.0-rc"
  compile "com.google.http-client:google-http-client-jackson2:$googleApiClientVersion"
  compile files("libs/gdata-core-1.0.jar")
  compile files("libs/gdata-client-1.0.jar")
  compile files("libs/gdata-media-1.0.jar")
  compile files("libs/gdata-client-meta-1.0.jar")
  compile files("libs/gdata-photos-2.0.jar")
  compile files("libs/data-photos-meta-2.0.jar")
  // web
  compile "javax.servlet:servlet-api:$servletApiVersion"
  compile "org.eclipse.jetty:jetty-server:$jettyVersion"
  compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
  compile "com.google.inject.extensions:guice-servlet:$guiceServletVersion"
  compile "com.sun.jersey:jersey-server:$jerseyVersion"
  compile "com.sun.jersey:jersey-bundle:$jerseyVersion"
  compile "com.sun.jersey:jersey-servlet:$jerseyVersion"
  compile "com.sun.jersey.contribs:jersey-guice:$jerseyVersion"
  compile "com.sun.jersey:jersey-json:$jerseyVersion"

  // couch db api
  compile "org.ektorp:org.ektorp:$orgEktorpVersion"
  // other
  compile "args4j:args4j:$args4jVersion" //CLI

  testCompile "org.testng:testng:$testngVersion"
  testCompile "org.mockito:mockito-all:$mockitoVersion"
}